{
    "swagger": "2.0",
    "info": {
        "description": "Multi-tenancy-manager for LeanIX. Manages accounts, contracts, users, workspaces, permissions, and more.",
        "version": "1.6.348",
        "title": "MTM"
    },
    "basePath": "/services/mtm/v1",
    "tags": [
        {
            "name": "accounts",
            "description": "Manage accounts"
        },
        {
            "name": "apiTokens",
            "description": "Manage api tokens"
        },
        {
            "name": "applications",
            "description": "List the applications"
        },
        {
            "name": "contracts",
            "description": "List contracts"
        },
        {
            "name": "customFeatures",
            "description": "Custom Features"
        },
        {
            "name": "domains",
            "description": "Manage domains"
        },
        {
            "name": "events",
            "description": "List events for the authenticated user"
        },
        {
            "name": "exports",
            "description": "Manage exports"
        },
        {
            "name": "identityProviders",
            "description": "Manage identity providers (IdPs)"
        },
        {
            "name": "idm",
            "description": "Identity management"
        },
        {
            "name": "inactive",
            "description": "Inactive users"
        },
        {
            "name": "instances",
            "description": "Manage instances"
        },
        {
            "name": "notificationBatches",
            "description": "User notification batches"
        },
        {
            "name": "notifications",
            "description": "User notifications"
        },
        {
            "name": "permissions",
            "description": "Manage workspace permissions"
        },
        {
            "name": "settings",
            "description": "Settings"
        },
        {
            "name": "stats",
            "description": "Statistics"
        },
        {
            "name": "technicalusers",
            "description": "Manage technical users"
        },
        {
            "name": "templates",
            "description": "HTML mail templates"
        },
        {
            "name": "users",
            "description": "Users"
        },
        {
            "name": "workspaces",
            "description": "Manage workspaces"
        }
    ],
    "paths": {
        "/accounts": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "getAccounts",
                "description": "Retrieves all accounts. Restricted to LeanIX internal use only.",
                "operationId": "getAccounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A part of the name to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "createAccount",
                "description": "Create an account. Restricted to LeanIX internal use only.",
                "operationId": "createAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/accounts/{id}": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "getAccount",
                "description": "Retrieves a single account.",
                "operationId": "getAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "accounts"
                ],
                "summary": "updateAccount",
                "description": "Update account info.",
                "operationId": "updateAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Account",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "accounts"
                ],
                "summary": "deleteAccount",
                "description": "Delete an account. Restricted to LeanIX internal use only.",
                "operationId": "deleteAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/accounts/{id}/contracts": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "getContracts",
                "description": "Retrieves all contracts for the account.",
                "operationId": "getContracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContractListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/accounts/{id}/events": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "getEvents",
                "description": "Retrieves all events for an account (date must be ISO 8601 formatted).",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "The date offset to fetch events from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/accounts/{id}/instances": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "getInstances",
                "description": "Get all instances for this account.",
                "operationId": "getInstances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/accounts/{id}/settings": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "getSettings",
                "description": "Endpoint to list the user specific settings. Restricted to LeanIX internal use only.",
                "operationId": "getSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Setting type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONFIG",
                            "SETUP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/accounts/{id}/users": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "getUsers",
                "description": "Get all users for this account.",
                "operationId": "getUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Search by email address (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search in user name or name (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/apiTokens": {
            "get": {
                "tags": [
                    "apiTokens"
                ],
                "summary": "getApiTokens",
                "description": "retrieves all matching api tokens. ",
                "operationId": "getApiTokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "Filter by identifier (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Find tokens belonging to this user id. (optional, only allowed for SYSTEM user)",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "Find tokens belonging to this workspace id. (optional)",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiTokenListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "apiTokens"
                ],
                "summary": "createApiToken",
                "description": "creates an api token. ",
                "operationId": "createApiToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "apiToken",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApiToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/apiTokens/{id}": {
            "get": {
                "tags": [
                    "apiTokens"
                ],
                "summary": "getApiToken",
                "description": "retrieves an api token. ",
                "operationId": "getApiToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "apiTokens"
                ],
                "summary": "updateApiToken",
                "description": "updates an api token. ",
                "operationId": "updateApiToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "tokenData",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApiToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "apiTokens"
                ],
                "summary": "deleteApiToken",
                "description": "deletes an api token. ",
                "operationId": "deleteApiToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authorized"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/applications": {
            "get": {
                "tags": [
                    "applications"
                ],
                "summary": "getApplications",
                "description": "Retrieves all applications. Restricted to LeanIX internal use only.",
                "operationId": "getApplications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApplicationListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/applications/{name}": {
            "get": {
                "tags": [
                    "applications"
                ],
                "summary": "getApplication",
                "description": "Retrieve specific application by name. Restricted to LeanIX internal use only.",
                "operationId": "getApplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "application name, a const like mtm",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApplicationResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/applications/{name}/editions": {
            "get": {
                "tags": [
                    "applications"
                ],
                "summary": "getEditions",
                "description": "Retrieves all editions. Restricted to LeanIX internal use only.",
                "operationId": "getEditions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "withoutLegacyEditions",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FeatureBundleListResponse"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/applications/{name}/editions/{id}": {
            "get": {
                "tags": [
                    "applications"
                ],
                "summary": "getEditions",
                "description": "Retrieves an edition",
                "operationId": "getEdition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FeatureBundleResponse"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/applications/{name}/editions/{id}/features/{featureId}": {
            "get": {
                "tags": [
                    "applications"
                ],
                "summary": "getFeature",
                "description": "Retrieves a feature",
                "operationId": "getFeature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FeatureResponse"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "applications"
                ],
                "summary": "accessFeature",
                "description": "Checks the use permission of a feature",
                "operationId": "accessFeature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FeatureAccessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FeatureAccessResponse"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/applications/{name}/features": {
            "get": {
                "tags": [
                    "applications"
                ],
                "summary": "getFeatures",
                "description": "Retrieves all possible features",
                "operationId": "getFeatures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FeatureListResponse"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/contracts": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "getContracts",
                "description": "Retrieves all contracts. Restricted to LeanIX internal use only.",
                "operationId": "getContracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search for account, type or status",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContractListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "createContract",
                "description": "Add a contract. Restricted to LeanIX internal use only.",
                "operationId": "createContract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "contract data",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContractResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/contracts/{id}": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "getContract",
                "description": "Get a contract. Restricted to LeanIX internal use only.",
                "operationId": "getContract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContractResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "contracts"
                ],
                "summary": "updateContract",
                "description": "Update a contract. Restricted to LeanIX internal use only.",
                "operationId": "updateContract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContractResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "contracts"
                ],
                "summary": "deleteContract",
                "description": "Delete a contract. Restricted to LeanIX internal use only.",
                "operationId": "deleteContract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContractResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/contracts/{id}/customFeatures": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "getCustomFeatures",
                "description": "Endpoint to list the contract specific custom features. Restricted to LeanIX internal use only.",
                "operationId": "getCustomFeatures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomFeatureListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/contracts/{id}/events": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "getEvents",
                "description": "Retrieves all events for the contract. Restricted to LeanIX internal use only.",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "time limit, list only newer events (date must be ISO 8601 formatted)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/contracts/{id}/settings": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "getSettings",
                "description": "Endpoint to list the contract specific settings. Restricted to LeanIX internal use only.",
                "operationId": "getSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Setting type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONFIG",
                            "SETUP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/contracts/{id}/workspaces": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "getWorkspaces",
                "description": "Get the workspaces of a contract. Restricted to LeanIX internal use only.",
                "operationId": "getWorkspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/customFeatures": {
            "get": {
                "tags": [
                    "customFeatures"
                ],
                "summary": "getCustomFeatures",
                "description": "Retrieves settings. Restricted to LeanIX internal use only.",
                "operationId": "getCustomFeatures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "description": "Contract UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "Workspace UUID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomFeatureListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "customFeatures"
                ],
                "summary": "createCustomFeature",
                "description": "Endpoint to set a customFeature. Restricted to LeanIX internal use only.",
                "operationId": "createCustomFeature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFeature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomFeatureResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/customFeatures/{id}": {
            "get": {
                "tags": [
                    "customFeatures"
                ],
                "summary": "getCustomFeature",
                "description": "Endpoint to get a custom feature. Restricted to LeanIX internal use only.",
                "operationId": "getCustomFeature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CustomFeature UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomFeatureResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "customFeatures"
                ],
                "summary": "updateCustomFeature",
                "description": "Endpoint to update a custom feature. Restricted to LeanIX internal use only.",
                "operationId": "updateCustomFeature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CustomFeature UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFeature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomFeatureResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "customFeatures"
                ],
                "summary": "deleteCustomFeature",
                "description": "Endpoint to delete a custom feature. Restricted to LeanIX internal use only.",
                "operationId": "deleteCustomFeature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CustomFeature UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomFeatureResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/domains": {
            "get": {
                "tags": [
                    "domains"
                ],
                "summary": "getDomains",
                "description": "Retrieves all domains. Restricted to LeanIX internal use only.",
                "operationId": "getDomains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A part of the FQDN to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "FQDN",
                        "in": "query",
                        "description": "FQDN of the IDP (is unique over all domains)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DomainListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "domains"
                ],
                "summary": "createDomain",
                "description": "Creates a domain. Restricted to LeanIX internal use only.",
                "operationId": "createDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DomainResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/domains/{id}": {
            "get": {
                "tags": [
                    "domains"
                ],
                "summary": "getDomain",
                "description": "Retrieves a specific domain. Restricted to LeanIX internal use only.",
                "operationId": "getDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DomainResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "domains"
                ],
                "summary": "updateDomain",
                "description": "Updates a domain. Restricted to LeanIX internal use only.",
                "operationId": "updateDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Domain UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DomainResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "domains"
                ],
                "summary": "deleteDomain",
                "description": "Deletes a domain. Restricted to LeanIX internal use only.",
                "operationId": "deleteDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Domain UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IdentityProviderResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/domains/{id}/workspaces": {
            "get": {
                "tags": [
                    "domains"
                ],
                "summary": "getWorkspaces",
                "description": "Retrieves all workspaces for a domain. Restricted to LeanIX internal use only.",
                "operationId": "getWorkspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Domain UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "events"
                ],
                "summary": "getEvents",
                "description": "Retrieves all events for the requesting user. Restricted to LeanIX internal use only.",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "events"
                ],
                "summary": "createEvent",
                "description": "Creates an event. Restricted to LeanIX internal use only.",
                "operationId": "createEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/events/{id}": {
            "get": {
                "tags": [
                    "events"
                ],
                "summary": "getEvent",
                "description": "Retrieves one event. Restricted to LeanIX internal use only.",
                "operationId": "getEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "events"
                ],
                "summary": "updateEvent",
                "description": "Updates an event, only status can be updated. Restricted to LeanIX internal use only.",
                "operationId": "updateEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/exports/{key}": {
            "get": {
                "tags": [
                    "exports"
                ],
                "summary": "getExport",
                "description": "Retrieves an export",
                "operationId": "getExport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Download key",
                        "required": true,
                        "type": "string",
                        "pattern": ".+"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Download key invalid"
                    },
                    "404": {
                        "description": "The file for the download key could not be found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/identityProviders": {
            "get": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "getIdentityProviders",
                "description": "Retrieves all identity providers. Restricted to LeanIX internal use only.",
                "operationId": "getIdentityProviders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A part of the name or EntityID to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entityID",
                        "in": "query",
                        "description": "EntityID of the IDP (is unique over all IdPs)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IdentityProviderListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "createIdentityProvider",
                "description": "Creates an identity provider. Restricted to LeanIX internal use only.",
                "operationId": "createIdentityProvider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentityProvider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IdentityProviderResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/identityProviders/{id}": {
            "get": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "getIdentityProvider",
                "description": "Retrieves a specific entity provider. Restricted to LeanIX internal use only.",
                "operationId": "getIdentityProvider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IdentityProviderResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "updateIdentityProvider",
                "description": "Updates an identity provider. Restricted to LeanIX internal use only.",
                "operationId": "updateIdentityProvider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identity provider UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentityProvider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IdentityProviderResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "deleteIdentityProvider",
                "description": "Deletes an identity provider. Restricted to LeanIX internal use only.",
                "operationId": "deleteIdentityProvider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identity provider UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IdentityProviderResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/identityProviders/{id}/domains": {
            "get": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "getDomains",
                "description": "Retrieves all domains for an identity provider. Restricted to LeanIX internal use only.",
                "operationId": "getDomains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identity provider UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DomainListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/identityProviders/{id}/events": {
            "get": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "getEvents",
                "description": "Retrieves all events for an identity provider (send date as 2013-10-05T00%3A21%3A54.000%2B07%3A00). Restricted to LeanIX internal use only.",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identity Provider UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "ISO 8601 date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/identityProviders/{id}/instances": {
            "get": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "getInstances",
                "description": "Retrieves all instances for an identity provider. Restricted to LeanIX internal use only.",
                "operationId": "getInstances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identity provider UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/identityProviders/{id}/metadata.xml": {
            "get": {
                "tags": [
                    "identityProviders"
                ],
                "summary": "getMetadata",
                "description": "Download metadata of an identity provider",
                "operationId": "getMetadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identity provider UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/activate": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "activate",
                "description": "User self activation",
                "operationId": "activate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Activation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "422": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/authenticate": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "authenticate",
                "description": "Endpoint to check user credentials (netId + password) for system users. Restricted to LeanIX internal use only.",
                "operationId": "authenticate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/invite": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "invite",
                "description": "Invite a user to a workspace",
                "operationId": "invite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invitation"
                        }
                    },
                    {
                        "name": "silent",
                        "in": "query",
                        "description": "Enables silent mode. No emails are sent out then. (optional)",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/login": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "login",
                "description": "Notifies MTM of a login at a remote workspace. Can be called by systems only. Restricted to LeanIX internal use only.",
                "operationId": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "No such user."
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/logout": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "logout",
                "description": "Notifies MTM of a logout at a remote workspace. Invalidates the access token used for the request.",
                "operationId": "logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BasicResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/reset-password": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "resetPassword",
                "description": "Endpoint to start the reset the password process, can only be accessed by systems.",
                "operationId": "resetPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CredentialsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/review": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "review",
                "description": "Confirm or deny an invitation",
                "operationId": "review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PermissionListResponse"
                        }
                    },
                    "422": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/idm/set-password": {
            "post": {
                "tags": [
                    "idm"
                ],
                "summary": "setPassword",
                "description": "Endpoint to finish the reset the password process.",
                "operationId": "setPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/inactive": {
            "get": {
                "tags": [
                    "inactive"
                ],
                "summary": "inactive",
                "description": "List inactive users. Restricted to LeanIX internal use only.",
                "operationId": "getInactiveUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "The id of the workspace to query for inactive users.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "alpha",
                        "in": "query",
                        "description": "The alpha value for significance, when classifying users as inactive.",
                        "required": false,
                        "type": "number",
                        "default": 0.01,
                        "format": "double"
                    },
                    {
                        "name": "minDaysUntilAbsent",
                        "in": "query",
                        "description": "Minimum amount of days, when a regular user is seen as inactive regardless of usual login behavior.",
                        "required": false,
                        "type": "integer",
                        "default": 28,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/instances": {
            "get": {
                "tags": [
                    "instances"
                ],
                "summary": "getInstances",
                "description": "Retrieves all instances. Restricted to LeanIX internal use only.",
                "operationId": "getInstances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A part of the name or URL to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "application",
                        "in": "query",
                        "description": "Application name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "URL",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "instances"
                ],
                "summary": "createInstance",
                "description": "Creates an instance. Restricted to LeanIX internal use only.",
                "operationId": "createInstance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Instance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/instances/{id}": {
            "get": {
                "tags": [
                    "instances"
                ],
                "summary": "getInstance",
                "description": "Retrieves a specific instance. Restricted to LeanIX internal use only.",
                "operationId": "getInstance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "instances"
                ],
                "summary": "updateInstance",
                "description": "Updates an instance. Restricted to LeanIX internal use only.",
                "operationId": "updateInstance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Instance UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Instance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "instances"
                ],
                "summary": "deleteInstance",
                "description": "Deletes an instance. Restricted to LeanIX internal use only.",
                "operationId": "deleteInstance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Instance UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/instances/{id}/domains": {
            "get": {
                "tags": [
                    "instances"
                ],
                "summary": "getDomains",
                "description": "Retrieves all domains for an instance. Restricted to LeanIX internal use only.",
                "operationId": "getDomains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Instance UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DomainListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/instances/{id}/events": {
            "get": {
                "tags": [
                    "instances"
                ],
                "summary": "getEvents",
                "description": "Retrieves all events for an instance (send date as 2013-10-05T00%3A21%3A54.000%2B07%3A00). Restricted to LeanIX internal use only.",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Instance UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "ISO 8601 date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/instances/{id}/workspaces": {
            "get": {
                "tags": [
                    "instances"
                ],
                "summary": "getWorkspaces",
                "description": "Retrieves all workspaces for an instance. Restricted to LeanIX internal use only.",
                "operationId": "getWorkspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Instance UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/notificationBatches": {
            "post": {
                "tags": [
                    "notificationBatches"
                ],
                "summary": "createBatch",
                "description": "Endpoint to create new notifications. Restricted to LeanIX internal use only.",
                "operationId": "createNotifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NotificationBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NotificationListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "summary": "getNotifications",
                "description": "Endpoint to list the notifications.",
                "operationId": "getNotifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "READ",
                            "UNREAD"
                        ]
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (default createdAt-DESC)",
                        "required": false,
                        "type": "string",
                        "default": "createdAt-desc"
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "The channel of the notifications",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NotificationListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ],
                "deprecated": true
            },
            "post": {
                "tags": [
                    "notifications"
                ],
                "summary": "createNotification",
                "description": "Sets the notification to read. Restricted to LeanIX internal use only.",
                "operationId": "createNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NotificationResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/notifications/sendTestNotification": {
            "post": {
                "tags": [
                    "notifications"
                ],
                "summary": "createTestNotification",
                "description": "",
                "operationId": "createTestNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HtmlMailTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NotificationResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/notifications/{id}": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "summary": "getNotification",
                "description": "Returns the given notification (if the requesting user can access it).",
                "operationId": "getNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NotificationResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "422": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/NotificationResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ],
                "deprecated": true
            },
            "put": {
                "tags": [
                    "notifications"
                ],
                "summary": "updateNotification",
                "description": "Flips status of a notification between READ and UNREAD. Restricted to LeanIX internal use only.",
                "operationId": "updateNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NotificationResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/permissions": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "getPermissions",
                "description": "Endpoint to list the user permissions. Restricted to LeanIX internal use only.",
                "operationId": "getPermissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "User UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "Workspace UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Query string to search the related user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email to search for, may also be a comma separated list of emails",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Optional status to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 50, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 50,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PermissionListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "permissions"
                ],
                "summary": "setPermission",
                "description": "Set a user permission for a workspace. If the related user object contains changed data, the data is persisted.",
                "operationId": "createPermission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PermissionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/permissions/{id}": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "getPermission",
                "description": "Retrieves one permission for requested permission id.",
                "operationId": "getPermission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PermissionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/permissions/{id}/settings": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "Settings",
                "description": "Endpoint to list the permission specific settings.",
                "operationId": "getSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Setting type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONFIG",
                            "SETUP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/settings": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "getSettings",
                "description": "Retrieves settings",
                "operationId": "getSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contractId",
                        "in": "query",
                        "description": "Contract UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "User UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "Workspace UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "permissionId",
                        "in": "query",
                        "description": "Permission UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "application",
                        "in": "query",
                        "description": "Application name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Setting type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONFIG",
                            "SETUP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "settings"
                ],
                "summary": "createSetting",
                "description": "Endpoint to set a setting.",
                "operationId": "createSetting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/settings/notifications": {
            "post": {
                "tags": [
                    "settings"
                ],
                "summary": "toggleNotifications",
                "description": "Endpoint to enable/disable notifications.",
                "operationId": "setWorkspaceNotificationStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "disabled",
                        "in": "query",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/settings/{id}": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "getSetting",
                "description": "Endpoint to get a setting.",
                "operationId": "getSetting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Setting UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "settings"
                ],
                "summary": "Update a setting",
                "description": "Endpoint to update a setting.",
                "operationId": "updateSetting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Setting UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "settings"
                ],
                "summary": "Delete a setting",
                "description": "Endpoint to delete a setting.",
                "operationId": "deleteSetting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Setting UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/stats": {
            "get": {
                "tags": [
                    "stats"
                ],
                "summary": "getStats",
                "description": "Returns the mtm basic stats. Restricted to LeanIX internal use only.",
                "operationId": "getStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StatsListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/technicalusers": {
            "get": {
                "tags": [
                    "technicalusers"
                ],
                "summary": "Technical users",
                "description": "List or search all technical users.",
                "operationId": "getTechnicalUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "queryUserName",
                        "in": "query",
                        "description": "Search in technical user name (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string",
                        "default": "userName-ASC"
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "The id of the workspace the technical user belong to only usable for a System User",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TechnicalUserListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "technicalusers"
                ],
                "summary": "createTechnicalUser",
                "description": "Create a technical user",
                "operationId": "createTechnicalUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TechnicalUserInputData"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TechnicalUserResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/technicalusers/{id}": {
            "get": {
                "tags": [
                    "technicalusers"
                ],
                "summary": "getTechnicalUser",
                "description": "Returns technical user data.",
                "operationId": "getTechnicalUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TechnicalUser UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "description": "The id of the workspace the technical user belong to only usable for a System User",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TechnicalUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "No such user."
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "technicalusers"
                ],
                "summary": "updateTechnicalUser",
                "description": "Update a technical user",
                "operationId": "updateTechnicalUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TechnicalUser UUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TechnicalUserInputData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TechnicalUserResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "technicalusers"
                ],
                "summary": "deleteTechnicalUser",
                "description": "Delete a technical user.",
                "operationId": "deleteTechnicalUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success deleted"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "No such user."
                    },
                    "409": {
                        "description": "Existing permission"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/technicalusers/{id}/changelog": {
            "get": {
                "tags": [
                    "technicalusers"
                ],
                "summary": "getEvents",
                "description": "Retrieves the technical user events for an user ",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string",
                        "default": "createdAt-DESC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/technicalusers/{id}/replaceToken": {
            "put": {
                "tags": [
                    "technicalusers"
                ],
                "summary": "replaceTechnicalUserAPIToken",
                "description": "Replace the API Token for a technical user",
                "operationId": "replaceTokenForTechnicalUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TechnicalUser UUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TechnicalUserResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/templates": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "getTemplate",
                "description": "Endpoint to list the mail template for a workspace.",
                "operationId": "getTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/HtmlMailTemplate"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "templates"
                ],
                "summary": "createTemplate",
                "description": "Creates a HTML mail template",
                "operationId": "createTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HtmlMailTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/HtmlMailTemplate"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "templates"
                ],
                "summary": "createTemplate",
                "description": "Creates a HTML mail template",
                "operationId": "updateTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HtmlMailTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/HtmlMailTemplate"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "User",
                "description": "List or search all users.",
                "operationId": "getUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Search by email address (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search in user name or name (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "createUser",
                "description": "Create a user",
                "operationId": "createUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "getUser",
                "description": "Returns user data.",
                "operationId": "getUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "returnSinglePermission",
                        "in": "query",
                        "description": "If true returns only the permission for the workspace of the auth user",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "No such user."
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "updateUser",
                "description": "Update a user",
                "operationId": "updateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "noAdditionalPermissions",
                        "in": "query",
                        "description": "If true returns only the permissions already provided",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "No such user."
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{id}/events": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "getEvents",
                "description": "Retrieves all events for an user (date must be ISO 8601 formatted)",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{id}/password": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "createUserPassword",
                "description": "Create a password for a user. Restricted to LeanIX internal use only.",
                "operationId": "createUserPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{id}/passwords": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Reset Password",
                "description": "Endpoint to finish the reset the password process, can only be accessed by systems.",
                "operationId": "setPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{id}/permissions": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "getPermissions",
                "description": "Endpoint to list the user permissions.",
                "operationId": "getPermissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includePotentialPermissions",
                        "in": "query",
                        "description": "Include potential permissions, i.e. permissions that do not exist yet but would be created on first login attempt. (optional)",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "validOnly",
                        "in": "query",
                        "description": "Show only active permissions. (optional)",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Query string to search in workspace and role",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PermissionListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{id}/settings": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "getSettings",
                "description": "Endpoint to list the user specific settings.",
                "operationId": "getSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Setting type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONFIG",
                            "SETUP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{userId}/tokens": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "createPushNotificationToken",
                "description": "Creates a push notification token for a user",
                "operationId": "createPushNotificationToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Push Notification Token",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Parameter for push notification token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Push Notification Token already exists"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users/{userId}/tokens/{token}": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "deletePushNotificationToken",
                "description": "Deletes a push notification token for a user",
                "operationId": "deletePushNotificationToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BasicResponse"
                        }
                    },
                    "404": {
                        "description": "No such token."
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getWorkspaces",
                "description": "List all workspaces for the requesting user",
                "operationId": "getWorkspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string",
                        "default": "id-asc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "workspaces"
                ],
                "summary": "createWorkspace",
                "description": "Creates a workspace",
                "operationId": "createWorkspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getWorkspace",
                "description": "Retrieves a workspace",
                "operationId": "getWorkspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "workspaces"
                ],
                "summary": "updateWorkspace",
                "description": "Updates a workspace",
                "operationId": "updateWorkspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "workspaces"
                ],
                "summary": "deleteWorkspace",
                "description": "Deletes a workspace. Restricted to LeanIX internal use only.",
                "operationId": "deleteWorkspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/customFeatures": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getCustomFeatures",
                "description": "Lists the workspace specific custom features",
                "operationId": "getCustomFeatures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomFeatureListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/events": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getEvents",
                "description": "Retrieves all events for a workspace (date must be ISO 8601 formatted)",
                "operationId": "getEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 100, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventType",
                        "in": "query",
                        "description": "Event type filter (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/featureBundle": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getFeatureBundle",
                "description": "Retrieves a workspace feature bundle (setup settings)",
                "operationId": "getFeatureBundle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FeatureBundleResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/impersonations": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getImpersonations",
                "description": "Read support user impersonations of the workspace",
                "operationId": "getImpersonations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The workspace to create a support user impersonation for.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImpersonationListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "422": {
                        "description": "Business logic exception"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/listSupportUsers": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getSupportPermissions",
                "description": "Retrieves all active support users for a workspace",
                "operationId": "getSupportUserPermissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/permissions": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getPermissions",
                "description": "Retrieves all permission (users) for the workspace",
                "operationId": "getPermissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Query string to search in user (first name, last name, role)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Optional status to search for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeTechnicalUsers",
                        "in": "query",
                        "description": "Include technical users in listing",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PermissionListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/permissions/export": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getUserListExport",
                "description": "Creates an EXCEL export of the user list",
                "operationId": "getUserListExport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DownloadKeyResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/permissions/stats": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getPermissionStats",
                "description": "Returns the total number of users within a workspace for each Permission Status (ACTIVE, ARCHIVED, INVITED...). Additionally, for each Permission Status a list of all Permission Roles (ADMIN, MEMBER...) and user count is provided. In other words, the result is a matrix of user counts with axis PermissionStatus and PermissionRole.",
                "operationId": "getPermissionStats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StatsListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/permissions/{permissionId}": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getPermission",
                "description": "Retrieves the permission with the given ID of the workspace",
                "operationId": "getPermission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "permissionId",
                        "in": "path",
                        "description": "ID of the permission to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PermissionResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/settings": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getSettings",
                "description": "Lists the workspace specific settings",
                "operationId": "getSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Setting type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONFIG",
                            "SETUP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SettingListResponse"
                        }
                    },
                    "403": {
                        "description": "Permission denied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/users": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getUsers",
                "description": "Retrieves all users for the workspace",
                "operationId": "getUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/workspaces/{id}/users/{userId}": {
            "get": {
                "tags": [
                    "workspaces"
                ],
                "summary": "getUsers",
                "description": "Retrieves a specific user with a permission for this workspace",
                "operationId": "getUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to access (1 indexed, defaults to 1)",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The page size requested (defaults to 30, max 100)",
                        "required": false,
                        "type": "integer",
                        "default": 30,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated list of sorting (optional)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserListResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "token": {
            "type": "oauth2",
            "tokenUrl": "/services/mtm/v1/oauth2/token",
            "flow": "application"
        }
    },
    "definitions": {
        "AccessTokenResponse": {
            "type": "object",
            "properties": {
                "scope": {
                    "type": "string"
                },
                "expired": {
                    "type": "boolean",
                    "default": false
                },
                "access_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer",
                    "format": "int64"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 32
                },
                "fromAddress": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "responsibleUser": {
                    "$ref": "#/definitions/User"
                },
                "passwordPolicy": {
                    "type": "string",
                    "enum": [
                        "NORMAL",
                        "STRICT"
                    ]
                }
            }
        },
        "AccountListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                }
            }
        },
        "AccountResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Account"
                }
            }
        },
        "Activation": {
            "type": "object",
            "required": [
                "firstName",
                "lastName"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ApiError": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApiToken": {
            "type": "object",
            "required": [
                "creatorId",
                "expiry",
                "userId",
                "workspaceId"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "token": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "internal": {
                    "type": "boolean",
                    "default": false
                },
                "userId": {
                    "type": "string",
                    "format": "uuid"
                },
                "workspaceId": {
                    "type": "string",
                    "format": "uuid"
                },
                "expiry": {
                    "type": "string",
                    "format": "date-time"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "ApiTokenData": {
            "type": "object",
            "required": [
                "expiry"
            ],
            "properties": {
                "expiry": {
                    "$ref": "#/definitions/Instant"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "ApiTokenInputData": {
            "type": "object",
            "required": [
                "expiry"
            ],
            "properties": {
                "expiry": {
                    "$ref": "#/definitions/Instant"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ApiTokenListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiToken"
                    }
                }
            }
        },
        "ApiTokenResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/ApiToken"
                }
            }
        },
        "Application": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ApplicationListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application"
                    }
                }
            }
        },
        "ApplicationResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Application"
                }
            }
        },
        "BasicResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Chronology": {
            "type": "object",
            "properties": {
                "zone": {
                    "$ref": "#/definitions/DateTimeZone"
                }
            }
        },
        "Contract": {
            "type": "object",
            "required": [
                "application",
                "status",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "featureBundleId": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 64
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "REGULAR",
                        "TRIAL"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "BLOCKED"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "application": {
                    "$ref": "#/definitions/Application"
                },
                "displayName": {
                    "type": "string",
                    "description": "An artificial name describing the contract.",
                    "readOnly": true
                },
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "active": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ContractListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contract"
                    }
                }
            }
        },
        "ContractResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Contract"
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            },
            "description": "Credentials (netID, password, user UUID)"
        },
        "CredentialsResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Credentials"
                }
            }
        },
        "CustomCertificate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "pemContent": {
                    "type": "string"
                },
                "keyContent": {
                    "type": "string"
                }
            }
        },
        "CustomFeature": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "workspace": {
                    "$ref": "#/definitions/Workspace"
                },
                "contract": {
                    "$ref": "#/definitions/Contract"
                },
                "featureId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ]
                },
                "quota": {
                    "type": "integer",
                    "format": "int32"
                },
                "feature": {
                    "$ref": "#/definitions/Feature"
                },
                "scope": {
                    "type": "string",
                    "readOnly": true
                },
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "CustomFeatureListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFeature"
                    }
                }
            }
        },
        "CustomFeatureResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/CustomFeature"
                }
            }
        },
        "DateTimeZone": {
            "type": "object",
            "properties": {
                "fixed": {
                    "type": "boolean",
                    "default": false
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "Domain": {
            "type": "object",
            "required": [
                "identityProvider"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 255
                },
                "identityProvider": {
                    "$ref": "#/definitions/IdentityProvider"
                },
                "exclusiveIdp": {
                    "type": "boolean",
                    "default": false
                },
                "customCertificate": {
                    "$ref": "#/definitions/CustomCertificate"
                }
            }
        },
        "DomainListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain"
                    }
                }
            }
        },
        "DomainResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Domain"
                }
            }
        },
        "DownloadKey": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "DownloadKeyResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/DownloadKey"
                }
            }
        },
        "Event": {
            "type": "object",
            "required": [
                "actor",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "TEST_EVENT",
                        "APITOKEN_CREATE",
                        "APITOKEN_UPDATE",
                        "APITOKEN_DELETE",
                        "ACCOUNT_CREATE",
                        "ACCOUNT_UPDATE",
                        "ACCOUNT_DELETE",
                        "CONTRACT_CREATE",
                        "CONTRACT_UPDATE",
                        "CONTRACT_DELETE",
                        "WORKSPACE_CREATE",
                        "WORKSPACE_UPDATE",
                        "WORKSPACE_DELETE",
                        "WORKSPACE_INITIALIZE",
                        "TECHNICAL_USER_ARCHIVE_PERMISSION",
                        "USER_CREATE",
                        "USER_UPDATE",
                        "USER_DELETE",
                        "USER_WELCOME",
                        "USER_WELCOME_SSO",
                        "USER_LOGIN",
                        "USER_LOGIN_FAILED",
                        "USER_ACCESS_WORKSPACE",
                        "USER_PERMISSION_CREATE",
                        "USER_PERMISSION_UPDATE",
                        "USER_ACTIVATE",
                        "USER_INVITE",
                        "USER_INVITE_CONFIRM",
                        "USER_INVITE_REJECT",
                        "USER_INVITE_APPROVE",
                        "USER_INVITE_REMIND",
                        "USER_PASSWORD_CREATE",
                        "USER_PASSWORD_UPDATE",
                        "USER_PASSWORD_RESET",
                        "DOMAIN_UPDATE",
                        "DOMAIN_DELETE",
                        "WORKSPACE_STATISTICS",
                        "INSTANCE_DELETE",
                        "IDENTITY_PROVIDER_DELETE",
                        "DAILY_SCIM_STATISTICS_CALCULATED",
                        "USER_MAILJET_DELETE_FAILURE",
                        "USER_MAILJET_DELETE_SUCCESS"
                    ]
                },
                "application": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "STARTED",
                        "FINISHED"
                    ]
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "actor": {
                    "$ref": "#/definitions/User"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "workspace": {
                    "$ref": "#/definitions/Workspace"
                },
                "contract": {
                    "$ref": "#/definitions/Contract"
                },
                "instance": {
                    "$ref": "#/definitions/Instance"
                },
                "identityProvider": {
                    "$ref": "#/definitions/IdentityProvider"
                },
                "finishedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "payload": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "EventListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                }
            }
        },
        "EventResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Event"
                }
            }
        },
        "Feature": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "FUNCTIONAL",
                        "QUOTA"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ]
                },
                "group": {
                    "type": "string",
                    "enum": [
                        "BETA",
                        "PRODUCTIVE",
                        "LEGACY",
                        "CUSTOMER",
                        "EXCEPTION"
                    ]
                },
                "quota": {
                    "type": "integer",
                    "format": "int32"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customized": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "FeatureAccess": {
            "type": "object",
            "properties": {
                "feature": {
                    "$ref": "#/definitions/Feature"
                },
                "granted": {
                    "type": "boolean",
                    "default": false
                },
                "usedValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "usedRole": {
                    "type": "string"
                }
            }
        },
        "FeatureAccessRequest": {
            "type": "object",
            "properties": {
                "edition": {
                    "type": "string"
                },
                "custom": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    }
                },
                "value": {
                    "type": "integer",
                    "format": "int32"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "FeatureAccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/FeatureAccess"
                }
            }
        },
        "FeatureBundle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "base": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "EDITION",
                        "CUSTOM"
                    ]
                },
                "legacy": {
                    "type": "boolean",
                    "default": false
                },
                "version": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    }
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "FeatureBundleListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FeatureBundle"
                    }
                }
            }
        },
        "FeatureBundleResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/FeatureBundle"
                }
            }
        },
        "FeatureListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    }
                }
            }
        },
        "FeatureResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Feature"
                }
            }
        },
        "HtmlMailTemplate": {
            "type": "object",
            "required": [
                "workspaceId"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "footer": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string",
                    "format": "uuid"
                },
                "active": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "IdentityProvider": {
            "type": "object",
            "required": [
                "identityManagement"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 64
                },
                "userNameDomain": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "identityManagement": {
                    "type": "string",
                    "enum": [
                        "FULLY_EXTERNAL",
                        "MTM_BASED_ROLES",
                        "FULLY_MTM_BASED"
                    ]
                },
                "entityId": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 255
                },
                "metadata": {
                    "type": "string"
                },
                "certificateExpiryDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "IdentityProviderListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IdentityProvider"
                    }
                }
            }
        },
        "IdentityProviderResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/IdentityProvider"
                }
            }
        },
        "Impersonation": {
            "type": "object",
            "required": [
                "impersonator",
                "language",
                "loginTime",
                "workspace"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "impersonator": {
                    "$ref": "#/definitions/User"
                },
                "workspace": {
                    "$ref": "#/definitions/Workspace"
                },
                "loginTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "logoutTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "language": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "accessToken": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "ImpersonationListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Impersonation"
                    }
                }
            }
        },
        "Instance": {
            "type": "object",
            "required": [
                "application",
                "resourceServerKey",
                "resourceServerSecret"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 64
                },
                "url": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 256
                },
                "identityManagement": {
                    "type": "string",
                    "enum": [
                        "FULLY_EXTERNAL",
                        "MTM_BASED_ROLES",
                        "FULLY_MTM_BASED"
                    ]
                },
                "isDefault": {
                    "type": "boolean",
                    "default": false
                },
                "isPrimary": {
                    "type": "boolean",
                    "default": false
                },
                "entityId": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 255
                },
                "application": {
                    "$ref": "#/definitions/Application"
                },
                "resourceServerKey": {
                    "type": "string"
                },
                "resourceServerSecret": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "identityProvider": {
                    "$ref": "#/definitions/IdentityProvider"
                },
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "thirdParty": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "InstanceListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Instance"
                    }
                }
            }
        },
        "InstanceResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Instance"
                }
            }
        },
        "Instant": {
            "type": "object",
            "properties": {
                "chronology": {
                    "$ref": "#/definitions/Chronology"
                },
                "millis": {
                    "type": "integer",
                    "format": "int64"
                },
                "zone": {
                    "$ref": "#/definitions/DateTimeZone"
                },
                "afterNow": {
                    "type": "boolean",
                    "default": false
                },
                "beforeNow": {
                    "type": "boolean",
                    "default": false
                },
                "equalNow": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Invitation": {
            "type": "object",
            "required": [
                "host",
                "permission",
                "user",
                "workspace"
            ],
            "properties": {
                "host": {
                    "$ref": "#/definitions/User"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "workspace": {
                    "$ref": "#/definitions/Workspace"
                },
                "permission": {
                    "$ref": "#/definitions/Permission"
                },
                "message": {
                    "type": "string"
                }
            },
            "description": "Invitation which is sent to invite a user to a workspace."
        },
        "Link": {
            "type": "object",
            "properties": {
                "rel": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "Login": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "workspaceName": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "MEMBER",
                        "VIEWER",
                        "CONTACT",
                        "SYSTEM_READ",
                        "SYSTEM_WRITE",
                        "SYSTEM_AS_USER",
                        "TRANSIENT"
                    ]
                },
                "customerRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "accessControlEntities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklist": {
                    "type": "boolean",
                    "default": false
                },
                "ipAddress": {
                    "type": "string"
                },
                "idpEntityId": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "workspace": {
                    "$ref": "#/definitions/Workspace"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "accessToken": {
                    "$ref": "#/definitions/AccessTokenResponse"
                },
                "userAgent": {
                    "type": "string"
                },
                "transientUser": {
                    "type": "boolean",
                    "default": false
                }
            },
            "description": "Login to resolve user permissions"
        },
        "LoginResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Login"
                }
            }
        },
        "Notification": {
            "type": "object",
            "required": [
                "recipient"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "subject": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 255
                },
                "i18NSubjects": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "subjectAggregated": {
                    "type": "string"
                },
                "i18NSubjectsAggregated": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "READ",
                        "UNREAD"
                    ]
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "workspaceId": {
                    "type": "string"
                },
                "recipient": {
                    "$ref": "#/definitions/User"
                },
                "recipientCc": {
                    "$ref": "#/definitions/User"
                },
                "type": {
                    "type": "string"
                },
                "templates": {
                    "type": "string"
                },
                "i18NTemplates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/NotificationTemplate"
                        }
                    }
                },
                "payload": {
                    "type": "string"
                },
                "priority": {
                    "type": "string",
                    "enum": [
                        "HIGH",
                        "MEDIUM",
                        "LOW"
                    ]
                },
                "transmissionStatus": {
                    "type": "string",
                    "enum": [
                        "UNSENT",
                        "SENT",
                        "RESENT",
                        "FAILED",
                        "REJECTED",
                        "IGNORED"
                    ]
                },
                "failCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "origin": {
                    "type": "string",
                    "enum": [
                        "MTM",
                        "EXTERNAL"
                    ]
                },
                "fromAddress": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCEPT_CONTACTS",
                            "ACCEPT_INVITED"
                        ]
                    }
                },
                "sentAt": {
                    "type": "integer",
                    "format": "int64"
                },
                "emailChannelType": {
                    "type": "string",
                    "enum": [
                        "POSTFIX_MAILJET",
                        "CUSTOM_SMTP",
                        "MAILGUN"
                    ]
                },
                "mailgunId": {
                    "type": "string"
                }
            }
        },
        "NotificationBatch": {
            "type": "object",
            "properties": {
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "subject": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 255
                },
                "i18NSubjects": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "subjectAggregated": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                },
                "i18NSubjectsAggregated": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "workspaceId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NotificationTemplate"
                    }
                },
                "i18NTemplates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/NotificationTemplate"
                        }
                    }
                },
                "payload": {
                    "type": "string"
                },
                "priority": {
                    "type": "string",
                    "enum": [
                        "HIGH",
                        "MEDIUM",
                        "LOW"
                    ]
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCEPT_CONTACTS",
                            "ACCEPT_INVITED"
                        ]
                    }
                }
            }
        },
        "NotificationListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Notification"
                    }
                }
            }
        },
        "NotificationResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Notification"
                }
            }
        },
        "NotificationTemplate": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "Parameter for push notification token": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "IOS",
                        "ANDROID",
                        "WINDOWS"
                    ]
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "PasswordChangeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            },
            "description": "Information needed to change password"
        },
        "Permission": {
            "type": "object",
            "required": [
                "role",
                "status",
                "user",
                "workspace"
            ],
            "properties": {
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "workspace": {
                    "$ref": "#/definitions/Workspace"
                },
                "workspaceId": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "MEMBER",
                        "VIEWER",
                        "CONTACT",
                        "SYSTEM_READ",
                        "SYSTEM_WRITE",
                        "SYSTEM_AS_USER",
                        "TRANSIENT"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "NOTINVITED",
                        "ACTIVE",
                        "ARCHIVED",
                        "INVITED",
                        "REQUESTED",
                        "ANONYMIZED"
                    ]
                },
                "lastLogin": {
                    "type": "string",
                    "format": "date-time"
                },
                "invitedByUser": {
                    "$ref": "#/definitions/User"
                },
                "reviewedByUser": {
                    "$ref": "#/definitions/User"
                },
                "customerRoles": {
                    "type": "string"
                },
                "accessControlEntities": {
                    "type": "string"
                },
                "ignoreBlacklist": {
                    "type": "boolean",
                    "default": false
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "replayed": {
                    "type": "boolean",
                    "default": false
                },
                "active": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "PermissionListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                }
            }
        },
        "PermissionResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Permission"
                }
            }
        },
        "Review": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "actorUsername": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "NOTINVITED",
                        "ACTIVE",
                        "ARCHIVED",
                        "INVITED",
                        "REQUESTED",
                        "ANONYMIZED"
                    ]
                }
            }
        },
        "RoleDetail": {
            "type": "object",
            "properties": {
                "permissionRole": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "MEMBER",
                        "VIEWER",
                        "CONTACT",
                        "SYSTEM_READ",
                        "SYSTEM_WRITE",
                        "SYSTEM_AS_USER",
                        "TRANSIENT"
                    ]
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Setting": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "workspace": {
                    "$ref": "#/definitions/Workspace"
                },
                "permission": {
                    "$ref": "#/definitions/Permission"
                },
                "application": {
                    "$ref": "#/definitions/Application"
                },
                "contract": {
                    "$ref": "#/definitions/Contract"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "SETUP",
                        "CONFIG"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "scope": {
                    "type": "string",
                    "readOnly": true
                },
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "SettingListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Setting"
                    }
                }
            }
        },
        "SettingResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Setting"
                }
            }
        },
        "Stat": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "roleDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleDetail"
                    }
                }
            }
        },
        "StatsListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Stat"
                    }
                }
            }
        },
        "TechnicalUserData": {
            "type": "object",
            "required": [
                "permissionRole",
                "userName",
                "workspaceId"
            ],
            "properties": {
                "userName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "permissionRole": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "MEMBER",
                        "VIEWER",
                        "CONTACT",
                        "SYSTEM_READ",
                        "SYSTEM_WRITE",
                        "SYSTEM_AS_USER",
                        "TRANSIENT"
                    ]
                },
                "customerRoles": {
                    "type": "string"
                },
                "accessControlEntities": {
                    "type": "string"
                },
                "apiTokenData": {
                    "$ref": "#/definitions/ApiTokenData"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "accountId": {
                    "type": "string",
                    "format": "uuid"
                },
                "workspaceId": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "TechnicalUserInputData": {
            "type": "object",
            "required": [
                "permissionRole",
                "userName"
            ],
            "properties": {
                "userName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "permissionRole": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "MEMBER",
                        "VIEWER",
                        "CONTACT",
                        "SYSTEM_READ",
                        "SYSTEM_WRITE",
                        "SYSTEM_AS_USER",
                        "TRANSIENT"
                    ]
                },
                "customerRoles": {
                    "type": "string"
                },
                "accessControlEntities": {
                    "type": "string"
                },
                "apiTokenData": {
                    "$ref": "#/definitions/ApiTokenInputData"
                }
            }
        },
        "TechnicalUserListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TechnicalUserData"
                    }
                }
            }
        },
        "TechnicalUserResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/TechnicalUserData"
                },
                "workspaceInstanceUrl": {
                    "type": "string"
                },
                "workspaceName": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "account",
                "role",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "userName": {
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 256
                },
                "technicalUserName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                },
                "email": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 256
                },
                "technicalUserEmail": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 256
                },
                "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                },
                "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                },
                "department": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string",
                    "format": "date-time"
                },
                "currentLogin": {
                    "type": "string",
                    "format": "date-time"
                },
                "apiKey": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "feedKey": {
                    "type": "string",
                    "minLength": 16,
                    "maxLength": 255
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "SUPERADMIN",
                        "SYSTEM",
                        "APICLIENT",
                        "ACCOUNTADMIN",
                        "ACCOUNTUSER"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ARCHIVED"
                    ]
                },
                "crmTags": {
                    "type": "string"
                },
                "crmLink": {
                    "type": "string"
                },
                "numberOfFailedLoginAttempts": {
                    "type": "integer",
                    "format": "int32"
                },
                "technicalUser": {
                    "type": "boolean",
                    "default": false
                },
                "scimManaged": {
                    "type": "boolean",
                    "default": false
                },
                "transientUser": {
                    "type": "boolean",
                    "default": false
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "replayed": {
                    "type": "boolean",
                    "default": false
                },
                "displayName": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "UserListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        },
        "UserResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/User"
                },
                "workspaceInstanceUrl": {
                    "type": "string"
                },
                "workspaceName": {
                    "type": "string"
                }
            }
        },
        "Workspace": {
            "type": "object",
            "required": [
                "contract"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "contract": {
                    "$ref": "#/definitions/Contract"
                },
                "instance": {
                    "$ref": "#/definitions/Instance"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "name": {
                    "type": "string"
                },
                "featureBundleId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "BLOCKED"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "LIVE",
                        "DEMO",
                        "SANDBOX"
                    ]
                },
                "defaultRole": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "MEMBER",
                        "VIEWER",
                        "CONTACT",
                        "SYSTEM_READ",
                        "SYSTEM_WRITE",
                        "SYSTEM_AS_USER",
                        "TRANSIENT"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "invitationOnly": {
                    "type": "boolean",
                    "default": false
                },
                "allowTransientUsers": {
                    "type": "boolean",
                    "default": false
                },
                "links": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "active": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "WorkspaceListResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Workspace"
                    }
                }
            }
        },
        "WorkspaceResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/Workspace"
                }
            }
        }
    }
}